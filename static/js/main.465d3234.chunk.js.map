{"version":3,"sources":["Event.js","EventList.js","mock-events.js","api.js","Alert.js","CitySearch.js","NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","showDetails","handleShowDetails","setState","event","this","props","className","local_date","local_time","name","group","yes_rsvp_count","onClick","dangerouslySetInnerHTML","__html","description","Component","EventList","events","map","key","id","mockEvents","getAccessToken","accessToken","localStorage","getItem","code","URLSearchParams","window","location","search","get","getOrRenewAccessToken","href","lastSavedTime","Date","now","type","a","async","url","axios","tokenInfo","setItem","data","access_token","refresh_token","getSuggestions","query","startsWith","city","country","localized_country_name","name_string","zip","lat","lon","token","result","getEvents","page","navigator","onLine","JSON","parse","length","stringify","Alert","getStyle","color","style","text","InfoAlert","fontStyle","marginBottom","minHeight","ErrorAlert","marginTop","WarningAlert","textTransform","CitySearch","suggestions","infoText","handleInputChanged","value","target","then","handleItemClicked","updateEvents","placeholder","onChange","item","NumberOfEvents","numberOfEvents","errorText","App","warningText","waringText","countEventsOnDate","date","count","i","getData","next7Days","currentDate","moment","add","dateString","format","push","number","height","margin","top","right","bottom","left","dataKey","allowDecimals","cursor","strokeDasharray","fill","rel","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","atatus","install"],"mappings":"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","file":"static/js/main.465d3234.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Event extends Component {\n\n\n  state = {\n    showDetails: false,\n  }\n\n  handleShowDetails = () => {\n    if (this.state.showDetails === false) {\n      this.setState({ showDetails: true });\n\n    }\n    else {\n      this.setState({ showDetails: false });\n    }\n\n  }\n\n\n\n\n  render() {\n    const { event } = this.props;\n\n    return (\n\n      <div className=\"Event\">\n        <div className=\"event-time\">{event.local_date} | {event.local_time}</div>\n        <div className=\"event-name\">{event.name}</div>\n        <div className=\"group-name\">{event.group.name}</div>\n        <div className=\"going\"> {event.yes_rsvp_count} People are going</div>\n        {!this.state.showDetails &&\n          <button className=\"showDetailsButton\" onClick={() => this.handleShowDetails()}>Details</button>\n        }\n        {this.state.showDetails &&\n\n          < button className=\"showLessButton\" onClick={() => this.handleShowDetails()}>Show Less</button>\n        }\n        {this.state.showDetails ? <div className=\"details\" dangerouslySetInnerHTML={{ __html: event.description }}></div> : null}\n\n\n      </div >\n    );\n  }\n}\n\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\n\n\nclass EventList extends Component {\n\n  render() {\n    return (\n      <ul className=\"EventList\">\n        {this.props.events.map(event =>\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        )}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","const mockEvents = {\n  \"city\": {\n    \"id\": 1007700,\n    \"city\": \"München\",\n    \"lat\": 48.14,\n    \"lon\": 11.58,\n    \"state\": \"\",\n    \"country\": \"de\",\n    \"zip\": \"meetup3\",\n    \"member_count\": 1257\n  },\n  \"events\": [\n    {\n      \"created\": 1581676443000,\n      \"duration\": 5400000,\n      \"id\": \"268705764\",\n      \"name\": \"Running Kubernetes on Azure\",\n      \"rsvp_limit\": 80,\n      \"date_in_series_pattern\": false,\n      \"status\": \"upcoming\",\n      \"time\": 1583429400000,\n      \"local_date\": \"2020-03-05\",\n      \"local_time\": \"18:30\",\n      \"updated\": 1581927279000,\n      \"utc_offset\": 3600000,\n      \"waitlist_count\": 0,\n      \"yes_rsvp_count\": 54,\n      \"venue\": {\n        \"id\": 25766821,\n        \"name\": \"medialesson - Büro München\",\n        \"lat\": 48.1531,\n        \"lon\": 11.58358,\n        \"repinned\": true,\n        \"address_1\": \"Leopoldstr. 8-10\",\n        \"address_2\": \"c/o Nutrion Coworking Space\",\n        \"city\": \"München\",\n        \"country\": \"de\",\n        \"localized_country_name\": \"Germany\"\n      },\n      \"group\": {\n        \"created\": 1520252901000,\n        \"name\": \"Software, Technology & Design Meetup München\",\n        \"id\": 27731423,\n        \"join_mode\": \"open\",\n        \"lat\": 48.14,\n        \"lon\": 11.58,\n        \"urlname\": \"Software-Technology-Meetup-Munchen\",\n        \"who\": \"Mitglieder\",\n        \"localized_location\": \"München, Germany\",\n        \"state\": \"\",\n        \"country\": \"de\",\n        \"region\": \"en_US\",\n        \"timezone\": \"Europe/Berlin\"\n      },\n      \"link\": \"https://www.meetup.com/Software-Technology-Meetup-Munchen/events/268705764/\",\n      \"description\": \"<p>In this session Mohit Chhabra will give you insights how to run real apps on the most popular container orchestrator in Azure.<\\/p> <p>We’ll review a high-level overview of the Azure Kubernetes Service (AKS) service and Azure Container Registry (ACR). We will start with the basic concepts of Kubernetes followed by understanding how AKS is different from the vanilla Kubernetes. Finally we'll be setting up and deploying a real world app on AKS. Feel free to follow along!<\\/p> <p>Our speaker Mohit is working as Software Engineer at medialesson GmbH, Germany. He is currently Microsoft Most Valuable Professional for Microsoft Azure and former leader of BDotnet (India's Biggest offline community). He has delivered more than 50 sessions in the community and international conferences. Prior to this, Mohit was Microsoft Student Partner and Mozilla Student Representative. He was also India's first Azure Champion and the first person to intern in Microsoft Technology Center.<\\/p> <p>This meetup will be hosted by medialesson, food and drinks will be provided. The session language is English. Please make sure you update your RSVP status 24h in advance so we don't waste any food!<\\/p> \",\n      \"how_to_find_us\": \"The entry to building No. 8 is directly accessible from Leopoldstr. near Siegestor, walk down the broad spiral stairs down to the basement and enter trough the first glass door on the right hand.\",\n      \"visibility\": \"public\",\n      \"member_pay_fee\": false\n    },\n    {\n      \"created\": 1579163951000,\n      \"duration\": 10800000,\n      \"id\": \"ddhzmrybchbbc\",\n      \"name\": \"Drupal User Group Munich @Acquia\",\n      \"rsvp_limit\": 20,\n      \"date_in_series_pattern\": false,\n      \"status\": \"upcoming\",\n      \"time\": 1589994000000,\n      \"local_date\": \"2020-05-20\",\n      \"local_time\": \"19:00\",\n      \"updated\": 1582734701000,\n      \"utc_offset\": 7200000,\n      \"waitlist_count\": 0,\n      \"yes_rsvp_count\": 2,\n      \"venue\": {\n        \"id\": 26867219,\n        \"name\": \"Acquia GmbH\",\n        \"lat\": 48.14321,\n        \"lon\": 11.538675,\n        \"repinned\": false,\n        \"address_1\": \"Erika-Mann-Straße 53\",\n        \"city\": \"München\",\n        \"country\": \"de\",\n        \"localized_country_name\": \"Germany\"\n      },\n      \"group\": {\n        \"created\": 1410086988000,\n        \"name\": \"München Drupal User Group Meetup\",\n        \"id\": 16845232,\n        \"join_mode\": \"open\",\n        \"lat\": 48.14,\n        \"lon\": 11.58,\n        \"urlname\": \"Munchen-Drupal-User-Group-Meetup\",\n        \"who\": \"Drupalistas\",\n        \"localized_location\": \"München, Germany\",\n        \"state\": \"\",\n        \"country\": \"de\",\n        \"region\": \"en_US\",\n        \"timezone\": \"Europe/Berlin\"\n      },\n      \"link\": \"https://www.meetup.com/Munchen-Drupal-User-Group-Meetup/events/ddhzmrybchbbc/\",\n      \"description\": \"<p>Das Meetup ist sowohl für Drupal-AnwenderInnen, -EntwicklerInnnen, -EinsteigerInnen als auch Professionals geeignet. Wir reden nicht nur über Drupal, sondern auch über Community, React, Vue.js, Docker, Symfony, PHP, UX und viele andere Dinge. Andere Communities sind bei uns herzlich Willkommen!<\\/p> <p>The meetup is for any level of Drupal user. We are not talking Drupal only but also about community, React, Vue.js, Docker Symfony, PHP, UX and much more stuff. Other communities are very welcome.<\\/p> <p>---<br/>Vortrag 1 / Talk 1 - tbd<br/>---<br/>Vortrag 2 /Talk 2 - tbd<br/>---<\\/p> <p>Wir suchen immer nach interessanten Themen! Wenn du interessiert daran bist, einen Vortrag oder ein interessantes Projekt vorzustellen (deutsch oder englisch entscheidest du!), melde dich bei uns.<\\/p> <p>Im Anschluss der Talks gibt es genügend Zeit für Diskussion und Networking. Wir sehen uns dort!<\\/p> <p>---<\\/p> <p>If you are interested in giving a talk or to speak about a interesting project, drop us a line. We are always looking for talks.<\\/p> <p>Followed by discussion and networking.<br/>See you there!<\\/p> \",\n      \"visibility\": \"public\",\n      \"member_pay_fee\": false\n    },\n    {\n      \"created\": 1580396975000,\n      \"duration\": 2700000,\n      \"id\": \"268321786\",\n      \"name\": \"Product Management Live Chat by Sandboxx Chief Product Officer\",\n      \"date_in_series_pattern\": false,\n      \"status\": \"upcoming\",\n      \"time\": 1586888100000,\n      \"local_date\": \"2020-04-14\",\n      \"local_time\": \"20:15\",\n      \"updated\": 1580397318000,\n      \"utc_offset\": 7200000,\n      \"waitlist_count\": 0,\n      \"yes_rsvp_count\": 3,\n      \"group\": {\n        \"created\": 1570531441000,\n        \"name\": \"Product School Munich\",\n        \"id\": 32863959,\n        \"join_mode\": \"open\",\n        \"lat\": 48.14,\n        \"lon\": 11.58,\n        \"urlname\": \"Product-School-Munich\",\n        \"who\": \"Members\",\n        \"localized_location\": \"München, Germany\",\n        \"state\": \"\",\n        \"country\": \"de\",\n        \"region\": \"en_US\",\n        \"timezone\": \"Europe/Berlin\"\n      },\n      \"link\": \"https://www.meetup.com/Product-School-Munich/events/268321786/\",\n      \"description\": \"<p>*** DISCLAIMER: This event is ONLINE ***<\\/p> <p>Join in and get all your Product Management questions answered during our online event with Craig Zingerline, Chief Product Officer at Sandboxx.<\\/p> <p>Some questions that will be answered include:<br/>1. What is the best part of being a Product Manager?<br/>2. What is the worst part of being a Product Manager?<br/>3. What do you look for in a Product Management resume and/or candidate?<br/>4. What was a difficult Product Manager interview question you’ve had? And how did you answer it?<br/>5. Have you ever felt like you didn’t understand the technology on a product? What did you do to compensate?<\\/p> <p>Meet the Speaker: Craig Zingerline<\\/p> <p>Craig is a 6-time founder and has advised and consulted for dozens of companies around Product Strategy and Growth. He's currently VP of Growth &amp; Travel at Sandboxx, and was previously Head of Growth at Upside Business Travel, Head of Product &amp; Growth at Red Tricycle, and CEO of Votion. Craig believes every company has growth potential to unlock, and that the Product Managers hold the keys to unlock that growth.<\\/p> <p>*Entrance not guaranteed without valid ticket from Eventbrite<\\/p> \",\n      \"visibility\": \"public\",\n      \"member_pay_fee\": false\n    }\n  ]\n}\n\nexport { mockEvents };","import { mockEvents } from \"./mock-events\";\nimport axios from 'axios';\n\n// Integrating meetup API\n// Getting access token\n\nfunction getAccessToken() {\n  const accessToken = localStorage.getItem('access_token');\n\n  if (!accessToken) {\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get('code');\n\n    if (!code) {\n      window.location.href = 'https://secure.meetup.com/oauth2/authorize?client_id=tcnqekvs4ro9d4971mc04i23l7&response_type=code&redirect_uri=https://evagrean.github.io/meetup-app/';\n      return null;\n    }\n    return getOrRenewAccessToken('get', code);\n  }\n\n  const lastSavedTime = localStorage.getItem('last_saved_time');\n\n  if (accessToken && (Date.now() - lastSavedTime < 3600000)) {\n    return accessToken;\n  }\n\n  const refreshToken = localStorage.getItem('refresh_token');\n  return getOrRenewAccessToken('renew', refreshToken);\n\n}\n\n\n\nasync function getOrRenewAccessToken(type, key) {\n  let url;\n  if (type === 'get') {\n    // Lambda endpoint to get token by code\n    url = 'https://qxlaue6cf1.execute-api.eu-central-1.amazonaws.com/dev/api/token/'\n      + key;\n  } else if (type === 'renew') {\n    // Lambda endpoit to get token by refresh_token\n    url = 'https://qxlaue6cf1.execute-api.eu-central-1.amazonaws.com/dev/api/refresh/'\n      + key;\n  }\n\n  // Use Axios to make a GET request to the endpoint\n  const tokenInfo = await axios.get(url);\n\n  // Save tokens to localStorage together with a timestamp\n  localStorage.setItem('access_token', tokenInfo.data.access_token);\n  localStorage.setItem('refresh_token', tokenInfo.data.refresh_token);\n  localStorage.setItem('last_saved_time', Date.now());\n\n  // Return access_token\n  return tokenInfo.data.access_token;\n}\n\n\n\n\n// receives query as its inpunt and returns mock data for a list of suggestions\nasync function getSuggestions(query) {\n  if (window.location.href.startsWith('http://localhost')) {\n    return [\n      {\n        city: 'Munich',\n        country: 'de',\n        localized_country_name: 'Germany',\n        name_string: 'Munich, Germany',\n        zip: 'meetup3',\n        lat: 48.14,\n        lon: 11.58\n      },\n      {\n        city: 'Munich',\n        country: 'us',\n        localized_country_name: 'USA',\n        state: 'ND',\n        name_string: 'Munich, North Dakota, USA',\n        zip: '58352',\n        lat: 48.66,\n        lon: -98.85\n      }\n\n    ];\n  }\n\n  const token = await getAccessToken();\n  if (token) {\n    const url = 'https://api.meetup.com/find/locations?&sign=true&photo-host=public&query='\n      + query\n      + '&access_token=' + token;\n    const result = await axios.get(url);\n    return result.data;\n  }\n  return [];\n\n\n}\n\n// function for getting the events\n\nasync function getEvents(lat, lon, page) {\n  if (window.location.href.startsWith('http://localhost')) {\n    return mockEvents.events;\n  }\n\n  if (!navigator.onLine) {\n    const events = localStorage.getItem('lastEvents');\n    return JSON.parse(events);\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    let url = 'https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public'\n      + '&access_token=' + token;\n    // lat, lon is optional; if you have a lat and lon, you can add them\n    if (lat && lon) {\n      url += '&lat=' + lat + '&lon=' + lon;\n    }\n    if (page) {\n      url += '&page=' + page;\n    }\n    if (lat && lon && page) {\n      url += '&lat=' + lat + '&lon=' + lon + '&page=' + page;\n    }\n    const result = await axios.get(url);\n\n    const events = result.data.events;\n    if (events.length) {\n      localStorage.setItem('lastEvents', JSON.stringify(events)); // converts list into string because localStorage can only store strings\n    }\n    return events;\n  }\n\n}\n\nexport { getSuggestions, getEvents, getAccessToken };","// Base component\n// Simple component that attempts to render text it receives from its props\n// Uses style from its getStyle() function which defines a basic style for the color\nimport React, { Component } from 'react';\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"Alert\">\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\n// Subclass InfoAlert\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'lightblue';\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n      fontStyle: 'italic',\n      marginBottom: '10px',\n      minHeight: '30.2px'\n    }\n  }\n}\n\n\n// Subclass ErrorAlert\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = '#e42c64';\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n      fontStyle: 'italic',\n      marginTop: '10px',\n      minHeight: '30.2px',\n    }\n  }\n}\n\n// Subclass WarningAlert\nclass WarningAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = '#f8f8ff'\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n      textTransform: 'uppercase',\n    }\n  }\n}\n\nexport { InfoAlert, ErrorAlert, WarningAlert };","import React, { Component } from 'react';\nimport { getSuggestions } from './api';\nimport { InfoAlert } from './Alert';\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [],\n    infoText: '',\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ query: value });\n    getSuggestions(value).then(suggestions => {\n      this.setState({ suggestions });\n\n      if (value && suggestions.length === 0) {\n        this.setState({\n          infoText: 'We can not find the city you are looking for. Please try another city',\n        });\n      } else {\n        this.setState({\n          infoText: '',\n        });\n      }\n    });\n\n  }\n\n  handleItemClicked = (value, lat, lon) => {\n    this.setState({ query: value, suggestions: [] });\n    this.props.updateEvents(lat, lon);\n  }\n\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <InfoAlert text={this.state.infoText} />\n        <input type=\"text\" className=\"city\" value={this.state.query} placeholder=\"City\" onChange={this.handleInputChanged} />\n        <ul className=\"suggestions\">\n          {this.state.suggestions.map(item =>\n            <li key={item.name_string} onClick={() => this.handleItemClicked(item.name_string, item.lat, item.lon)}>{item.name_string}</li>\n          )}\n        </ul>\n\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\nimport { ErrorAlert } from './Alert';\n\nclass NumberOfEvents extends Component {\n\n  state = {\n    numberOfEvents: 32,\n    errorText: '',\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ numberOfEvents: value });\n    if (value <= 0) {\n      this.setState({\n        errorText: 'Number should be at least 1',\n      });\n    } else {\n      this.setState({\n        errorText: '',\n      });\n\n    }\n    this.props.updateEvents(null, null, value);\n  }\n\n  render() {\n    return (\n      <div className=\"NumberOfEvents\">\n\n        <label><h4>Specify number of events:</h4></label>\n        <input type=\"text\" className=\"number\" value={this.state.numberOfEvents} onChange={this.handleInputChanged} />\n        <ErrorAlert text={this.state.errorText} />\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;","import React, { Component } from 'react';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport moment from 'moment';\n\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport { getEvents } from './api';\nimport NumberOfEvents from './NumberOfEvents';\nimport { WarningAlert } from './Alert';\n\n\n\nclass App extends Component {\n\n\n  state = {\n    events: [],\n    page: null,\n    lat: null,\n    lon: null,\n    warningText: '',\n  }\n\n  updateEvents = (lat, lon, page) => {\n    if (!navigator.onLine) {\n      this.setState({ warningText: 'You are currently offline. Events have been loaded from your last session' });\n    } else {\n      this.setState({ waringText: '' });\n    }\n\n    if (lat && lon) {\n      getEvents(lat, lon, this.state.page).then(events => this.setState({ events, lat, lon }));\n    } if (page) {\n      getEvents(this.state.lat, this.state.lon, page).then(events => this.setState({ events, page }));\n    } else {\n      getEvents(this.state.lat, this.state.lon, this.state.page).then(events => this.setState({ events }));\n    }\n  }\n\n  countEventsOnDate = (date) => {\n    let count = 0;\n    for (let i = 0; i < this.state.events.length; i += 1) {\n      if (this.state.events[i].local_date === date) {\n        count += 1;\n      }\n    }\n    return count;\n  }\n\n  getData = () => {\n    const next7Days = [];\n    const currentDate = moment();\n    for (let i = 0; i < 7; i += 1) {\n      currentDate.add(1, 'days');\n      const dateString = currentDate.format('YYYY-MM-DD');\n      const count = this.countEventsOnDate(dateString);\n      next7Days.push({ date: dateString, number: count });\n    }\n    return next7Days;\n  }\n\n  // default: show events based on user's location\n  componentDidMount() {\n    this.updateEvents(null, null);\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>GetTogether</h1>\n        <WarningAlert text={this.state.warningText} />\n        <CitySearch updateEvents={this.updateEvents} />\n        <NumberOfEvents updateEvents={this.updateEvents} numberOfEvents={this.state.events.length} />\n        <ResponsiveContainer height={400}>\n          <ScatterChart\n            margin={{\n              top: 20, right: 20, bottom: 20, left: 20,\n            }}\n          >\n            <CartesianGrid />\n            <XAxis type=\"category\" dataKey=\"date\" name=\"date\" />\n            <YAxis type=\"number\" dataKey=\"number\" name=\"number of events\" allowDecimals={false} />\n            <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n            <Scatter data={this.getData()} fill=\"#e42c64\" />\n          </ScatterChart>\n        </ResponsiveContainer>\n        <EventList events={this.state.events} />\n        <p className=\"about\">Project for <a href=\"https://careerfoundry.com/en/courses/become-a-web-developer/\" target=\"_blank\" rel=\"noopener noreferrer\">CareerFoundry</a> Full-Stack Immersion Course. Coded by <a href=\"https://github.com/evagrean\" target=\"_blank\" rel=\"noopener noreferrer\">Eva Greiner-Anzenbacher</a></p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as atatus from 'atatus-spa';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\natatus.config('36d6334057df4a22835acdca4f049acc').install();\n\n//  Verifies that integration is working\n// atatus.notify(new Error('Test Atatus Setup'));"],"sourceRoot":""}