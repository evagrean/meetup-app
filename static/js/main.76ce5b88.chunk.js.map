{"version":3,"sources":["Event.js","EventList.js","mock-events.js","api.js","Alert.js","CitySearch.js","NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","showDetails","handleShowDetails","setState","event","this","props","className","local_time","local_date","name","group","yes_rsvp_count","onClick","dangerouslySetInnerHTML","__html","description","Component","EventList","events","map","key","id","mockEvents","created","duration","date_in_series_pattern","status","time","updated","utc_offset","waitlist_count","join_mode","lat","lon","urlname","who","localized_location","country","region","timezone","link","visibility","member_pay_fee","getAccessToken","accessToken","localStorage","getItem","code","URLSearchParams","window","location","search","get","getOrRenewAccessToken","href","lastSavedTime","Date","now","type","a","async","url","axios","tokenInfo","setItem","data","access_token","refresh_token","getSuggestions","query","startsWith","city","localized_country_name","name_string","zip","token","result","getEvents","page","InfoAlert","color","getStyle","style","text","CitySearch","suggestions","handleInputChanged","value","target","then","length","infoText","handleItemClicked","updateEvents","placeholder","onChange","item","NumberOfEvents","numberOfEvents","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","atatus","install"],"mappings":"oRAiDeA,G,iNA3CbC,MAAQ,CACNC,aAAa,G,EAGfC,kBAAoB,YACa,IAA3B,EAAKF,MAAMC,YACb,EAAKE,SAAS,CAAEF,aAAa,IAI7B,EAAKE,SAAS,CAAEF,aAAa,K,wEAQvB,IAAD,OACCG,EAAUC,KAAKC,MAAfF,MAER,OAEE,yBAAKG,UAAU,SACb,yBAAKA,UAAU,cAAcH,EAAMI,WAAnC,MAAkDJ,EAAMK,YACxD,yBAAKF,UAAU,cAAcH,EAAMM,MACnC,yBAAKH,UAAU,cAAcH,EAAMO,MAAMD,MACzC,yBAAKH,UAAU,SAAf,IAAyBH,EAAMQ,eAA/B,sBACEP,KAAKL,MAAMC,aACX,4BAAQM,UAAU,oBAAoBM,QAAS,kBAAM,EAAKX,sBAA1D,WAEDG,KAAKL,MAAMC,aAEV,4BAASM,UAAU,iBAAiBM,QAAS,kBAAM,EAAKX,sBAAxD,aAEDG,KAAKL,MAAMC,YAAc,yBAAKM,UAAU,UAAUO,wBAAyB,CAAEC,OAAQX,EAAMY,eAAwB,U,GAtCxGC,cCiBLC,E,iLAZX,OACE,wBAAIX,UAAU,aACXF,KAAKC,MAAMa,OAAOC,KAAI,SAAAhB,GAAK,OAC1B,wBAAIiB,IAAKjB,EAAMkB,IACb,kBAAC,EAAD,CAAOlB,MAAOA,a,GAPFa,a,gBCLlBM,EAWI,CACN,CACEC,QAAS,aACTC,SAAU,KACVH,GAAI,YACJZ,KAAM,qDACNgB,wBAAwB,EACxBC,OAAQ,WACRC,KAAM,WACNnB,WAAY,aACZD,WAAY,QACZqB,QAAS,aACTC,WAAY,KACZC,eAAgB,EAChBnB,eAAgB,EAChBD,MAAO,CACLa,QAAS,aACTd,KAAM,oCACNY,GAAI,SACJU,UAAW,OACXC,IAAK,kBACLC,IAAK,mBACLC,QAAS,kBACTC,IAAK,aACLC,mBAAoB,sBACpBrC,MAAO,GACPsC,QAAS,KACTC,OAAQ,QACRC,SAAU,iBAEZC,KAAM,2DACNzB,YAAa,yEACb0B,WAAY,SACZC,gBAAgB,GAElB,CACEnB,QAAS,aACTC,SAAU,KACVH,GAAI,YACJZ,KAAM,iEACNgB,wBAAwB,EACxBC,OAAQ,WACRC,KAAM,WACNnB,WAAY,aACZD,WAAY,QACZqB,QAAS,aACTC,WAAY,KACZC,eAAgB,EAChBnB,eAAgB,EAChBD,MAAO,CACLa,QAAS,aACTd,KAAM,wBACNY,GAAI,SACJU,UAAW,OACXC,IAAK,kBACLC,IAAK,mBACLC,QAAS,wBACTC,IAAK,UACLC,mBAAoB,sBACpBrC,MAAO,GACPsC,QAAS,KACTC,OAAQ,QACRC,SAAU,iBAEZC,KAAM,iEACNzB,YAAa,uEACb0B,WAAY,SACZC,gBAAgB,GAElB,CACEnB,QAAS,aACTC,SAAU,KACVH,GAAI,YACJZ,KAAM,uBACNgB,wBAAwB,EACxBC,OAAQ,WACRC,KAAM,WACNnB,WAAY,aACZD,WAAY,QACZqB,QAAS,aACTC,WAAY,KACZC,eAAgB,EAChBnB,eAAgB,GAChBD,MAAO,CACLa,QAAS,aACTd,KAAM,iBACNY,GAAI,SACJU,UAAW,OACXC,IAAK,kBACLC,IAAK,mBACLC,QAAS,iBACTC,IAAK,UACLC,mBAAoB,sBACpBrC,MAAO,GACPsC,QAAS,KACTC,OAAQ,QACRC,SAAU,iBAEZC,KAAM,0DACNzB,YAAa,q0BACb0B,WAAY,SACZC,gBAAgB,I,gBC1GtB,SAASC,IACP,IAAMC,EAAcC,aAAaC,QAAQ,gBAEzC,IAAKF,EAAa,CAChB,IACMG,EADe,IAAIC,gBAAgBC,OAAOC,SAASC,QAC/BC,IAAI,QAE9B,OAAKL,EAIEM,EAAsB,MAAON,IAHlCE,OAAOC,SAASI,KAAO,yJAChB,MAKX,IAAMC,EAAgBV,aAAaC,QAAQ,mBAE3C,OAAIF,GAAgBY,KAAKC,MAAQF,EAAgB,KACxCX,EAIFS,EAAsB,QADRR,aAAaC,QAAQ,kBAO5C,SAAeO,EAAsBK,EAAMtC,GAA3C,iBAAAuC,EAAAC,OAAA,sDAEe,QAATF,EAEFG,EAAM,2EACFzC,EACc,UAATsC,IAETG,EAAM,6EACFzC,GATR,WAAAuC,EAAA,MAa0BG,IAAMV,IAAIS,IAbpC,cAaQE,EAbR,OAgBElB,aAAamB,QAAQ,eAAgBD,EAAUE,KAAKC,cACpDrB,aAAamB,QAAQ,gBAAiBD,EAAUE,KAAKE,eACrDtB,aAAamB,QAAQ,kBAAmBR,KAAKC,OAlB/C,kBAqBSM,EAAUE,KAAKC,cArBxB,qCA4BA,SAAeE,EAAeC,GAA9B,mBAAAV,EAAAC,OAAA,oDACMX,OAAOC,SAASI,KAAKgB,WAAW,oBADtC,yCAEW,CACL,CACEC,KAAM,SACNlC,QAAS,KACTmC,uBAAwB,UACxBC,YAAa,kBACbC,IAAK,UACL1C,IAAK,MACLC,IAAK,OAEP,CACEsC,KAAM,SACNlC,QAAS,KACTmC,uBAAwB,MACxBzE,MAAO,KACP0E,YAAa,4BACbC,IAAK,QACL1C,IAAK,MACLC,KAAM,SApBd,yBAAA0B,EAAA,MA0BsBhB,KA1BtB,YA0BQgC,EA1BR,gCA4BUd,EAAM,4EACRQ,EACA,iBAAmBM,EA9B3B,WAAAhB,EAAA,MA+ByBG,IAAMV,IAAIS,IA/BnC,cA+BUe,EA/BV,yBAgCWA,EAAOX,MAhClB,iCAkCS,IAlCT,sCAyCA,SAAeY,EAAU7C,EAAKC,EAAK6C,GAAnC,mBAAAnB,EAAAC,OAAA,oDACMX,OAAOC,SAASI,KAAKgB,WAAW,oBADtC,yCAEWhD,GAFX,yBAAAqC,EAAA,MAKsBhB,KALtB,YAKQgC,EALR,gCAQQd,EAAM,yFACac,EAEnB3C,GAAOC,IACT4B,GAAO,QAAU7B,EAAM,QAAUC,GAE/B6C,IACFjB,GAAO,SAAWiB,GAEhB9C,GAAOC,GAAO6C,IAChBjB,GAAO,QAAU7B,EAAM,QAAUC,EAAM,SAAW6C,GAlBxD,YAAAnB,EAAA,MAoByBG,IAAMV,IAAIS,IApBnC,eAoBUe,EApBV,yBAqBWA,EAAOX,KAAK/C,QArBvB,sC,IC3EM6D,E,YACJ,WAAY1E,GAAQ,IAAD,8BACjB,4CAAMA,KACD2E,MAAQ,SAFI,E,uCAtBnB,WAAY3E,GAAQ,IAAD,8BACjB,4CAAMA,KAIR4E,SAAW,WACT,MAAO,CACLD,MAAO,EAAKA,QALd,EAAKA,MAAQ,KAFI,E,sEAYjB,OACE,yBAAK1E,UAAU,SACb,uBAAG4E,MAAO9E,KAAK6E,YAAa7E,KAAKC,MAAM8E,W,GAf3BnE,cC8CLoE,E,2MA9CbrF,MAAQ,CACNsE,MAAO,GACPgB,YAAa,I,EAGfC,mBAAqB,SAACnF,GACpB,IAAMoF,EAAQpF,EAAMqF,OAAOD,MAC3B,EAAKrF,SAAS,CAAEmE,MAAOkB,IACvBnB,EAAemB,GAAOE,MAAK,SAAAJ,GACzB,EAAKnF,SAAS,CAAEmF,gBAEZE,GAAgC,IAAvBF,EAAYK,OACvB,EAAKxF,SAAS,CACZyF,SAAU,0EAGZ,EAAKzF,SAAS,CACZyF,SAAU,S,EAOlBC,kBAAoB,SAACL,EAAOvD,EAAKC,GAC/B,EAAK/B,SAAS,CAAEmE,MAAOkB,EAAOF,YAAa,KAC3C,EAAKhF,MAAMwF,aAAa7D,EAAKC,I,wEAIrB,IAAD,OACP,OACE,yBAAK3B,UAAU,cACb,kBAAC,EAAD,CAAW6E,KAAM/E,KAAKL,MAAM4F,WAC5B,2BAAOjC,KAAK,OAAOpD,UAAU,OAAOiF,MAAOnF,KAAKL,MAAMsE,MAAOyB,YAAY,OAAOC,SAAU3F,KAAKkF,qBAC/F,wBAAIhF,UAAU,eACXF,KAAKL,MAAMsF,YAAYlE,KAAI,SAAA6E,GAAI,OAC9B,wBAAI5E,IAAK4E,EAAKvB,YAAa7D,QAAS,kBAAM,EAAKgF,kBAAkBI,EAAKvB,YAAauB,EAAKhE,IAAKgE,EAAK/D,OAAO+D,EAAKvB,sB,GAtCjGzD,aCqBViF,E,2MArBblG,MAAQ,CACNmG,eAAgB,I,EAGlBZ,mBAAqB,SAACnF,GACpB,IAAMoF,EAAQpF,EAAMqF,OAAOD,MAC3B,EAAKrF,SAAS,CAAEgG,eAAgBX,IAChC,EAAKlF,MAAMwF,aAAa,KAAM,KAAMN,I,wEAIpC,OACE,yBAAKjF,UAAU,kBACb,+BAAO,0DACP,2BAAOoD,KAAK,OAAOpD,UAAU,SAASiF,MAAOnF,KAAKL,MAAMmG,eAAgBH,SAAU3F,KAAKkF,0B,GAhBlEtE,aC2CdmF,E,2MAlCbpG,MAAQ,CACNmB,OAAQ,GACR4D,KAAM,KACN9C,IAAK,KACLC,IAAK,M,EAGP4D,aAAe,SAAC7D,EAAKC,EAAK6C,GACpB9C,GAAOC,GACT4C,EAAU7C,EAAKC,EAAK,EAAKlC,MAAM+E,MAAMW,MAAK,SAAAvE,GAAM,OAAI,EAAKhB,SAAS,CAAEgB,SAAQc,MAAKC,WAC7E6C,EACJD,EAAU,EAAK9E,MAAMiC,IAAK,EAAKjC,MAAMkC,IAAK6C,GAAMW,MAAK,SAAAvE,GAAM,OAAI,EAAKhB,SAAS,CAAEgB,SAAQ4D,YAEvFD,EAAU,EAAK9E,MAAMiC,IAAK,EAAKjC,MAAMkC,IAAK,EAAKlC,MAAM+E,MAAMW,MAAK,SAAAvE,GAAM,OAAI,EAAKhB,SAAS,CAAEgB,e,mFAK5Fd,KAAKyF,aAAa,KAAM,Q,+BAKxB,OACE,yBAAKvF,UAAU,OACb,2CACA,kBAAC,EAAD,CAAYuF,aAAczF,KAAKyF,eAC/B,kBAAC,EAAD,CAAW3E,OAAQd,KAAKL,MAAMmB,SAC9B,kBAAC,EAAD,CAAgB2E,aAAczF,KAAKyF,aAAcK,eAAgB9F,KAAKL,MAAMmB,OAAOwE,c,GA/BzE1E,aCIEoF,QACW,cAA7BnD,OAAOC,SAASmD,UAEe,UAA7BpD,OAAOC,SAASmD,UAEhBpD,OAAOC,SAASmD,SAASC,MACvB,2D,YCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpB,MAAK,SAAAqB,GACjCA,EAAaC,gBCxHnBC,SAAc,oCAAoCC,Y","file":"static/js/main.76ce5b88.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Event extends Component {\n\n\n  state = {\n    showDetails: false,\n  }\n\n  handleShowDetails = () => {\n    if (this.state.showDetails === false) {\n      this.setState({ showDetails: true });\n\n    }\n    else {\n      this.setState({ showDetails: false });\n    }\n\n  }\n\n\n\n\n  render() {\n    const { event } = this.props;\n\n    return (\n\n      <div className=\"Event\">\n        <div className=\"event-time\">{event.local_time} | {event.local_date}</div>\n        <div className=\"event-name\">{event.name}</div>\n        <div className=\"group-name\">{event.group.name}</div>\n        <div className=\"going\"> {event.yes_rsvp_count} People are going</div>\n        {!this.state.showDetails &&\n          <button className=\"showDetailsButton\" onClick={() => this.handleShowDetails()}>Details</button>\n        }\n        {this.state.showDetails &&\n\n          < button className=\"showLessButton\" onClick={() => this.handleShowDetails()}>Show Less</button>\n        }\n        {this.state.showDetails ? <div className=\"details\" dangerouslySetInnerHTML={{ __html: event.description }}></div> : null}\n\n\n      </div >\n    );\n  }\n}\n\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\n\n\nclass EventList extends Component {\n\n  render() {\n    return (\n      <ul className=\"EventList\">\n        {this.props.events.map(event =>\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        )}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","const mockEvents = {\n  city: {\n    id: 1007700,\n    city: 'München',\n    lat: 48.14,\n    lon: 11.58,\n    state: '',\n    country: 'de',\n    zip: 'meetup3',\n    member_count: 1257\n  },\n  events: [\n    {\n      created: 1579702329000,\n      duration: 7200000,\n      id: '268111707',\n      name: 'How To Design Awesome CSS Components with Le Wagon',\n      date_in_series_pattern: false,\n      status: 'upcoming',\n      time: 1582651800000,\n      local_date: '2020-02-25',\n      local_time: '18:30',\n      updated: 1579702329000,\n      utc_offset: 3600000,\n      waitlist_count: 0,\n      yes_rsvp_count: 7,\n      group: {\n        created: 1574935324000,\n        name: 'Le Wagon Munich - Coding Bootcamp',\n        id: 33056128,\n        join_mode: 'open',\n        lat: 48.13999938964844,\n        lon: 11.579999923706055,\n        urlname: 'Le-Wagon-Munich',\n        who: 'Mitglieder',\n        localized_location: 'München, Germany',\n        state: '',\n        country: 'de',\n        region: 'en_US',\n        timezone: 'Europe/Berlin'\n      },\n      link: 'https://www.meetup.com/Le-Wagon-Munich/events/268111707/',\n      description: '</p> <p>We look forward to meeting you soon!</p> <p>Team Le Wagon</p> ',\n      visibility: 'public',\n      member_pay_fee: false\n    },\n    {\n      created: 1580396975000,\n      duration: 2700000,\n      id: '268321786',\n      name: 'Product Management Live Chat by Sandboxx Chief Product Officer',\n      date_in_series_pattern: false,\n      status: 'upcoming',\n      time: 1586888100000,\n      local_date: '2020-04-14',\n      local_time: '20:15',\n      updated: 1580397318000,\n      utc_offset: 7200000,\n      waitlist_count: 0,\n      yes_rsvp_count: 3,\n      group: {\n        created: 1570531441000,\n        name: 'Product School Munich',\n        id: 32863959,\n        join_mode: 'open',\n        lat: 48.13999938964844,\n        lon: 11.579999923706055,\n        urlname: 'Product-School-Munich',\n        who: 'Members',\n        localized_location: 'München, Germany',\n        state: '',\n        country: 'de',\n        region: 'en_US',\n        timezone: 'Europe/Berlin'\n      },\n      link: 'https://www.meetup.com/Product-School-Munich/events/268321786/',\n      description: '<p>*Entrance not guaranteed without valid ticket from Eventbrite</p>',\n      visibility: 'public',\n      member_pay_fee: false\n    },\n    {\n      created: 1581324523000,\n      duration: 5400000,\n      id: '268599428',\n      name: 'First kick-off event',\n      date_in_series_pattern: false,\n      status: 'upcoming',\n      time: 1582822800000,\n      local_date: '2020-02-27',\n      local_time: '18:00',\n      updated: 1581324971000,\n      utc_offset: 3600000,\n      waitlist_count: 0,\n      yes_rsvp_count: 17,\n      group: {\n        created: 1573128374000,\n        name: 'Microfrontends',\n        id: 32986964,\n        join_mode: 'open',\n        lat: 48.13999938964844,\n        lon: 11.579999923706055,\n        urlname: 'Microfrontends',\n        who: 'Members',\n        localized_location: 'München, Germany',\n        state: '',\n        country: 'de',\n        region: 'en_US',\n        timezone: 'Europe/Berlin'\n      },\n      link: 'https://www.meetup.com/Microfrontends/events/268599428/',\n      description: '<p>Dear Microfrontend friends,<br/>The time has come to organize our first kick-off event! The idea is to have the first one, just as a small get-together event, where I would really love to meet as much of you as possible and to hear more about your microfrontend projects/ideas, but also would like to use the opportunity to talk about the next, real, full-scale meetup event.</p> <p>The location will attach later after I see how many people want to attend, and depending on the interest, it might be a restaurant or might find some other location where we can have more space, in case of bigger interest.</p> <p>Once again short agenda:<br/>- Getting to know each other<br/>- Sharing microfrontend projects/ideas<br/>- Planning next, full-scale, meetup event</p> <p>I\\'m really excited and looking forward to meeting you all!!</p> ',\n      visibility: 'public',\n      member_pay_fee: false\n    }\n  ]\n}\n\nexport { mockEvents };","import { mockEvents } from \"./mock-events\";\nimport axios from 'axios';\n\n// Integrating meetup API\n// Getting access token\n\nfunction getAccessToken() {\n  const accessToken = localStorage.getItem('access_token');\n\n  if (!accessToken) {\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get('code');\n\n    if (!code) {\n      window.location.href = 'https://secure.meetup.com/oauth2/authorize?client_id=tcnqekvs4ro9d4971mc04i23l7&response_type=code&redirect_uri=https://evagrean.github.io/meetup-app/';\n      return null;\n    }\n    return getOrRenewAccessToken('get', code);\n  }\n\n  const lastSavedTime = localStorage.getItem('last_saved_time');\n\n  if (accessToken && (Date.now() - lastSavedTime < 3600000)) {\n    return accessToken;\n  }\n\n  const refreshToken = localStorage.getItem('refresh_token');\n  return getOrRenewAccessToken('renew', refreshToken);\n\n}\n\n\n\nasync function getOrRenewAccessToken(type, key) {\n  let url;\n  if (type === 'get') {\n    // Lambda endpoint to get token by code\n    url = 'https://qxlaue6cf1.execute-api.eu-central-1.amazonaws.com/dev/api/token/'\n      + key;\n  } else if (type === 'renew') {\n    // Lambda endpoit to get token by refresh_token\n    url = 'https://qxlaue6cf1.execute-api.eu-central-1.amazonaws.com/dev/api/refresh/'\n      + key;\n  }\n\n  // Use Axios to make a GET request to the endpoint\n  const tokenInfo = await axios.get(url);\n\n  // Save tokens to localStorage together with a timestamp\n  localStorage.setItem('access_token', tokenInfo.data.access_token);\n  localStorage.setItem('refresh_token', tokenInfo.data.refresh_token);\n  localStorage.setItem('last_saved_time', Date.now());\n\n  // Return access_token\n  return tokenInfo.data.access_token;\n}\n\n\n\n\n// receives query as its inpunt and returns mock data for a list of suggestions\nasync function getSuggestions(query) {\n  if (window.location.href.startsWith('http://localhost')) {\n    return [\n      {\n        city: 'Munich',\n        country: 'de',\n        localized_country_name: 'Germany',\n        name_string: 'Munich, Germany',\n        zip: 'meetup3',\n        lat: 48.14,\n        lon: 11.58\n      },\n      {\n        city: 'Munich',\n        country: 'us',\n        localized_country_name: 'USA',\n        state: 'ND',\n        name_string: 'Munich, North Dakota, USA',\n        zip: '58352',\n        lat: 48.66,\n        lon: -98.85\n      }\n\n    ];\n  }\n\n  const token = await getAccessToken();\n  if (token) {\n    const url = 'https://api.meetup.com/find/locations?&sign=true&photo-host=public&query='\n      + query\n      + '&access_token=' + token;\n    const result = await axios.get(url);\n    return result.data;\n  }\n  return [];\n\n\n}\n\n// function for getting the events\n\nasync function getEvents(lat, lon, page) {\n  if (window.location.href.startsWith('http://localhost')) {\n    return mockEvents.events;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    let url = 'https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public'\n      + '&access_token=' + token;\n    // lat, lon is optional; if you have a lat and lon, you can add them\n    if (lat && lon) {\n      url += '&lat=' + lat + '&lon=' + lon;\n    }\n    if (page) {\n      url += '&page=' + page;\n    }\n    if (lat && lon && page) {\n      url += '&lat=' + lat + '&lon=' + lon + '&page=' + page;\n    }\n    const result = await axios.get(url);\n    return result.data.events;\n  }\n\n}\n\nexport { getSuggestions, getEvents, getAccessToken };","// Base component\n// Simple component that attempts to render text it receives from its props\n// Uses style from its getStyle() function which defines a basic style for the color\nimport React, { Component } from 'react';\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"Alert\">\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\n// Subclass InfoAlert\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'yellow';\n  }\n}\n\n\n// Subclass ErrorAlert\n\nexport { InfoAlert };","import React, { Component } from 'react';\nimport { getSuggestions } from './api';\nimport { InfoAlert } from './Alert';\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [],\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ query: value });\n    getSuggestions(value).then(suggestions => {\n      this.setState({ suggestions });\n\n      if (value && suggestions.length === 0) {\n        this.setState({\n          infoText: 'We can not find the city you are looking for. Please try another city',\n        });\n      } else {\n        this.setState({\n          infoText: '',\n        });\n      }\n    });\n\n  }\n\n  handleItemClicked = (value, lat, lon) => {\n    this.setState({ query: value, suggestions: [] });\n    this.props.updateEvents(lat, lon);\n  }\n\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <InfoAlert text={this.state.infoText} />\n        <input type=\"text\" className=\"city\" value={this.state.query} placeholder=\"City\" onChange={this.handleInputChanged} />\n        <ul className=\"suggestions\">\n          {this.state.suggestions.map(item =>\n            <li key={item.name_string} onClick={() => this.handleItemClicked(item.name_string, item.lat, item.lon)}>{item.name_string}</li>\n          )}\n        </ul>\n\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n\n  state = {\n    numberOfEvents: 32,\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ numberOfEvents: value });\n    this.props.updateEvents(null, null, value);\n  }\n\n  render() {\n    return (\n      <div className=\"NumberOfEvents\">\n        <label><h4>Specify number of events:</h4></label>\n        <input type=\"text\" className=\"number\" value={this.state.numberOfEvents} onChange={this.handleInputChanged} />\n\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents } from './api.js';\n\n\nclass App extends Component {\n\n\n  state = {\n    events: [],\n    page: null,\n    lat: null,\n    lon: null\n  }\n\n  updateEvents = (lat, lon, page) => {\n    if (lat && lon) {\n      getEvents(lat, lon, this.state.page).then(events => this.setState({ events, lat, lon }));\n    } if (page) {\n      getEvents(this.state.lat, this.state.lon, page).then(events => this.setState({ events, page }));\n    } else {\n      getEvents(this.state.lat, this.state.lon, this.state.page).then(events => this.setState({ events }));\n    }\n  }\n  // default: show events based on user's location\n  componentDidMount() {\n    this.updateEvents(null, null);\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>GetTogether</h1>\n        <CitySearch updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n        <NumberOfEvents updateEvents={this.updateEvents} numberOfEvents={this.state.events.length} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as atatus from 'atatus-spa';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\natatus.config('36d6334057df4a22835acdca4f049acc').install();\n\n//  Verifies that integration is working\n// atatus.notify(new Error('Test Atatus Setup'));"],"sourceRoot":""}